---

import TableOfContentsHeading from './TableOfContentsHeading.astro';

const { headings } = Astro.props;

const toc = buildToc(headings)

type HeadingWithChildren = {
  depth: number;
  text: string;
  slug: string;
  subheadings: HeadingWithChildren[];
};

// Source: Kevin Lee Drum:  https://kld.dev/building-table-of-contents/
function buildToc(headings: HeadingWithChildren[]) {
  const toc = [];
  const parentHeadings = new Map();

  for (const h of headings) {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);

    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      const parent = parentHeadings.get(heading.depth - 1);
      if (parent) {
        parent.subheadings.push(heading);
      }
    }
  }

  return toc;
}


---

<div class="toc-container  ">
<nav class="toc">
  <h2>Contents</h2>
  
  <ul>
  {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
 
  </ul>
</nav>
</div>

<style>

  .toc-container {
    border-radius: 2% 2% 73.5% 73.5% / 72% 20% 3.5% 2.5%;
    border: 1px solid var(--dark-border-color);
    padding: 1rem;
    margin-bottom: 1rem;
    background-color: var(--white-background-color);

  }
  html.dark  .toc-container {
  
    background-color: var(--background-dark-light-color);
   
  }


 

@media screen and (min-width: 1280px) {
  .toc-container {
    position: fixed;
    top: 17%;
    left: 2%;
    width: 20%;
     

  }

  .toc {
 
    left: 0;
    

   
  }

 

}
</style>


<script src="../scripts/toc.js">
  
